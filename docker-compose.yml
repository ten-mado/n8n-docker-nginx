version: '3.8'
services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        N8N_VERSION: 1.29.1
    ports:
      - 5678:5678
    # 環境変数
    environment:
      - N8N_LOG_LEVEL=debug
      - NODE_FUNCTION_ALLOW_EXTERNAL=*
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=postgres
      - DB_POSTGRESDB_PORT=5432
      - DB_POSTGRESDB_DATABASE=${POSTGRES_DB}
      - DB_POSTGRESDB_USER=${POSTGRES_NON_ROOT_USER}
      - DB_POSTGRESDB_PASSWORD=${POSTGRES_NON_ROOT_PASSWORD}
      - N8N_HOST
      - WEBHOOK_URL
      - N8N_EDITOR_BASE_URL
      - AWS_ACCESS_KEY_ID
      - AWS_SECRET_ACCESS_KEY
    tty: true
    volumes:
      - ./.n8n:/home/node/.n8n
      - ./n8n-nodes-starter/dist:/home/node/.n8n/custom
    depends_on:
      postgres:
        condition: service_healthy
    # 実行ユーザーはホストマシンと同一であったほうが都合が良い時もあるので、適宜変えて下さい
    # user: "1000:1000"
    extra_hosts:
      - "host.docker.internal:host-gateway"

  postgres-init:
    image: postgres:16
    volumes:
      - ./db_storage:/var/lib/postgresql/data
      - ./init-data.sh:/docker-entrypoint-initdb.d/init-data.sh
    entrypoint:
      - sh
      - -c
      - |
        chown -R 2000:2000 /var/lib/postgresql/data
        chmod +x /docker-entrypoint-initdb.d/init-data.sh
  postgres:
    depends_on:
      postgres-init:
        condition: service_completed_successfully
    image: postgres:16
    restart: always
    environment:
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_DB
      - POSTGRES_NON_ROOT_USER
      - POSTGRES_NON_ROOT_PASSWORD
    volumes:
      - ./db_storage:/var/lib/postgresql/data
      - ./init-data.sh:/docker-entrypoint-initdb.d/init-data.sh
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -h localhost -U ${POSTGRES_USER} -d ${POSTGRES_DB}']
      interval: 5s
      timeout: 5s
      retries: 10
  reverse-proxy:
    image: nginx
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    ports:
      - 80:80
    depends_on:
      app:
        condition: service_started